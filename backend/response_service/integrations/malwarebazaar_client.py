import aiohttp
import logging
from core.config import settings

logger = logging.getLogger(__name__)

class MalwareBazaarClient:
    BASE_URL = "https://mb-api.abuse.ch/api/v1/"

    def __init__(self):
        self.session = None

    async def __aenter__(self):
        self.session = aiohttp.ClientSession()
        return self

    async def __aexit__(self, *exc):
        if self.session:
            await self.session.close()

    async def query_hash(self, file_hash: str) -> dict:
        """
        Query MalwareBazaar API for a file by MD5, SHA1 or SHA256 hash.
        Returns the JSON response dictionary.
        """
        payload = {"query": "get_info", "hash": file_hash}

        try:
            async with self.session.post(self.BASE_URL, data=payload) as resp:
                resp.raise_for_status()
                data = await resp.json()
                return data
        except Exception as e:
            logger.error(f"MalwareBazaar query failed for hash {file_hash}: {e}")
            raise

# Global instance
malwarebazaar_client = MalwareBazaarClient()
